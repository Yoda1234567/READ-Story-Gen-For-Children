# Authors: Code generated by ChatGPT online and comments by Daniel Holgate
# Date: 07/08/2025
# Description: Code for extracting from GlotStoryBook and the Aesop for Children all stories with between 400 and 800 words

input_file1 = 'AFP_cleaned_stories.txt' # Input of Aesop for Children
output_file1 = 'filtered_stories_400_to_800_AFP.txt' # Output of Aesop for Children stories with fewer than 150 words
input_file2 = 'Glot_cleaned_stories.txt' # Input of GlotStoryBook
output_file2 = 'filtered_stories_400_to_800_Glot.txt' # Output of GlotStoryBook stories with fewer than 150 words

# Function for counting the words in a written text
def word_count(text):
    # Splits the text into an array on spaces, so each word is an element in the array. The length of the array is 
    # then the length of the text in words
    return len(text.split())

# Reads the entirety of the two input datasets
with open(input_file1, 'r', encoding='utf-8') as f_in1:
    content1 = f_in1.read()
with open(input_file2, 'r', encoding='utf-8') as f_in2:
    content2 = f_in2.read()

# Extracts the stories from the input files and writes the non-empty ones to an array
stories1 = [story.strip() for story in content1.split('\n\n') if story.strip()]
stories2 = [story.strip() for story in content2.split('\n\n') if story.strip()]

# Goes through all the stories and stores those with between 400 and 800 words in another array
filtered_stories1 = [story for story in stories1 if 400 <= word_count(story) < 800]
filtered_stories2 = [story for story in stories2 if 400 <= word_count(story) < 800]

# Writes all the stories with between 400 and 800 words to a file for use in the extraction and generation stages
with open(output_file1, 'w', encoding='utf-8') as f_out1:
    f_out1.write('\n\n'.join(filtered_stories1))
with open(output_file2, 'w', encoding='utf-8') as f_out2:
    f_out2.write('\n\n'.join(filtered_stories2))