# Authors: Code generated by ChatGPT online and comments by Daniel Holgate
# Date: 07/08/2025
# Description: Code for processing GlotStoryBook by removing extra information and empty lines and creating a single paragraph
# per individual story

from collections import defaultdict

# Imports the python module for working with csv files or files structured like csv files
import csv

input_file = 'SmallerGlotToProcess.txt'
output_file = 'Glot_cleaned_stories.txt'

# Method for removing blank lines within a story
def remove_blank_lines(text):
    
    # Places the lines of the text in an array
    lines = text.splitlines()
    
    # Places all the non-empty lines (after removing the line's whitespace) into an array
    non_blank_lines = [line for line in lines if line.strip() != '']
    
    # Takes all the non-empty lines and joins them together to form a single paragraph
    return "".join(non_blank_lines)

# Reads in the whole input file (textfile saved from csv so same format) into a dictionary based on the headings
with open(input_file, 'r', encoding='utf-8') as f:
    reader = csv.DictReader(f)
    rows = list(reader)

texts = defaultdict(list)

# Loops through dictionary with all information
for row in rows:
    # Takes all the parts under the Text heading and uses the blank line removal method
    cleaned_text = remove_blank_lines(row['Text'])
    
    # Inserts the clean texts into the new dictionary with the File Name from the initial dictionary as the key
    texts[row['File Name']].append(cleaned_text)

combined_texts = []

# Loops over the keys and paragraph text saved in the texts dictionary
for fname, text_list in texts.items():
    # Joins all the texts with the same File Name together into one long paragraph
    combined_text = " ".join(text_list)  # No spaces between parts
    
    # Adds the single paragraph for the full story into an array for writing to a file later
    combined_texts.append(combined_text)

# Writes all the single paragraph stories to a file for the next stage of preprocessing
with open(output_file, 'w', encoding='utf-8') as f:
    for text in combined_texts:
        f.write(text.strip() + "\n\n")
